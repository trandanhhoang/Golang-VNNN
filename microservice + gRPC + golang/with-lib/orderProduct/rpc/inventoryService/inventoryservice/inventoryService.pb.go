// Code generated by protoc-gen-go. DO NOT EDIT.
// source: inventoryService.proto

package inventoryservice

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ProductResquest struct {
	Products             []byte   `protobuf:"bytes,1,opt,name=products,proto3" json:"products,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProductResquest) Reset()         { *m = ProductResquest{} }
func (m *ProductResquest) String() string { return proto.CompactTextString(m) }
func (*ProductResquest) ProtoMessage()    {}
func (*ProductResquest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d6996fff84d9d6e, []int{0}
}

func (m *ProductResquest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProductResquest.Unmarshal(m, b)
}
func (m *ProductResquest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProductResquest.Marshal(b, m, deterministic)
}
func (m *ProductResquest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProductResquest.Merge(m, src)
}
func (m *ProductResquest) XXX_Size() int {
	return xxx_messageInfo_ProductResquest.Size(m)
}
func (m *ProductResquest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProductResquest.DiscardUnknown(m)
}

var xxx_messageInfo_ProductResquest proto.InternalMessageInfo

func (m *ProductResquest) GetProducts() []byte {
	if m != nil {
		return m.Products
	}
	return nil
}

type BaseRespond struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BaseRespond) Reset()         { *m = BaseRespond{} }
func (m *BaseRespond) String() string { return proto.CompactTextString(m) }
func (*BaseRespond) ProtoMessage()    {}
func (*BaseRespond) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d6996fff84d9d6e, []int{1}
}

func (m *BaseRespond) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaseRespond.Unmarshal(m, b)
}
func (m *BaseRespond) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaseRespond.Marshal(b, m, deterministic)
}
func (m *BaseRespond) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaseRespond.Merge(m, src)
}
func (m *BaseRespond) XXX_Size() int {
	return xxx_messageInfo_BaseRespond.Size(m)
}
func (m *BaseRespond) XXX_DiscardUnknown() {
	xxx_messageInfo_BaseRespond.DiscardUnknown(m)
}

var xxx_messageInfo_BaseRespond proto.InternalMessageInfo

func (m *BaseRespond) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*ProductResquest)(nil), "inventoryservice.ProductResquest")
	proto.RegisterType((*BaseRespond)(nil), "inventoryservice.BaseRespond")
}

func init() { proto.RegisterFile("inventoryService.proto", fileDescriptor_6d6996fff84d9d6e) }

var fileDescriptor_6d6996fff84d9d6e = []byte{
	// 182 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xcb, 0xcc, 0x2b, 0x4b,
	0xcd, 0x2b, 0xc9, 0x2f, 0xaa, 0x0c, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca,
	0x2f, 0xc9, 0x17, 0x12, 0x80, 0x8b, 0x17, 0x43, 0xc4, 0x95, 0x74, 0xb9, 0xf8, 0x03, 0x8a, 0xf2,
	0x53, 0x4a, 0x93, 0x4b, 0x82, 0x52, 0x8b, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0xa4, 0xb8, 0x38,
	0x0a, 0x20, 0x42, 0xc5, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x3c, 0x41, 0x70, 0xbe, 0x92, 0x3a, 0x17,
	0xb7, 0x53, 0x62, 0x71, 0x6a, 0x50, 0x6a, 0x71, 0x41, 0x7e, 0x5e, 0x8a, 0x90, 0x04, 0x17, 0x7b,
	0x71, 0x69, 0x72, 0x72, 0x6a, 0x31, 0x44, 0x25, 0x47, 0x10, 0x8c, 0x6b, 0x74, 0x8a, 0x91, 0x4b,
	0xc0, 0x13, 0xcd, 0x11, 0x42, 0xb1, 0x5c, 0xe2, 0xce, 0x19, 0xa9, 0xc9, 0xd9, 0x50, 0x1b, 0x3d,
	0xf3, 0xe0, 0x2a, 0x84, 0x14, 0xf5, 0xd0, 0x9d, 0xa6, 0x87, 0xe6, 0x2e, 0x29, 0x59, 0x4c, 0x25,
	0x48, 0x6e, 0x51, 0x62, 0x10, 0x0a, 0xe7, 0x12, 0x74, 0x49, 0x4d, 0x2e, 0x4a, 0x4d, 0x2c, 0x4e,
	0xa5, 0xaa, 0xc1, 0x49, 0x6c, 0xe0, 0xd0, 0x33, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x6a, 0x74,
	0xa8, 0x1f, 0x57, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// InventoryServiceClient is the client API for InventoryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InventoryServiceClient interface {
	CheckProductInInventory(ctx context.Context, in *ProductResquest, opts ...grpc.CallOption) (*BaseRespond, error)
	DecreaseInventory(ctx context.Context, in *ProductResquest, opts ...grpc.CallOption) (*BaseRespond, error)
}

type inventoryServiceClient struct {
	cc *grpc.ClientConn
}

func NewInventoryServiceClient(cc *grpc.ClientConn) InventoryServiceClient {
	return &inventoryServiceClient{cc}
}

func (c *inventoryServiceClient) CheckProductInInventory(ctx context.Context, in *ProductResquest, opts ...grpc.CallOption) (*BaseRespond, error) {
	out := new(BaseRespond)
	err := c.cc.Invoke(ctx, "/inventoryservice.InventoryService/CheckProductInInventory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inventoryServiceClient) DecreaseInventory(ctx context.Context, in *ProductResquest, opts ...grpc.CallOption) (*BaseRespond, error) {
	out := new(BaseRespond)
	err := c.cc.Invoke(ctx, "/inventoryservice.InventoryService/DecreaseInventory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InventoryServiceServer is the server API for InventoryService service.
type InventoryServiceServer interface {
	CheckProductInInventory(context.Context, *ProductResquest) (*BaseRespond, error)
	DecreaseInventory(context.Context, *ProductResquest) (*BaseRespond, error)
}

// UnimplementedInventoryServiceServer can be embedded to have forward compatible implementations.
type UnimplementedInventoryServiceServer struct {
}

func (*UnimplementedInventoryServiceServer) CheckProductInInventory(ctx context.Context, req *ProductResquest) (*BaseRespond, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckProductInInventory not implemented")
}
func (*UnimplementedInventoryServiceServer) DecreaseInventory(ctx context.Context, req *ProductResquest) (*BaseRespond, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DecreaseInventory not implemented")
}

func RegisterInventoryServiceServer(s *grpc.Server, srv InventoryServiceServer) {
	s.RegisterService(&_InventoryService_serviceDesc, srv)
}

func _InventoryService_CheckProductInInventory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductResquest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InventoryServiceServer).CheckProductInInventory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inventoryservice.InventoryService/CheckProductInInventory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InventoryServiceServer).CheckProductInInventory(ctx, req.(*ProductResquest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InventoryService_DecreaseInventory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductResquest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InventoryServiceServer).DecreaseInventory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inventoryservice.InventoryService/DecreaseInventory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InventoryServiceServer).DecreaseInventory(ctx, req.(*ProductResquest))
	}
	return interceptor(ctx, in, info, handler)
}

var _InventoryService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "inventoryservice.InventoryService",
	HandlerType: (*InventoryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CheckProductInInventory",
			Handler:    _InventoryService_CheckProductInInventory_Handler,
		},
		{
			MethodName: "DecreaseInventory",
			Handler:    _InventoryService_DecreaseInventory_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "inventoryService.proto",
}
