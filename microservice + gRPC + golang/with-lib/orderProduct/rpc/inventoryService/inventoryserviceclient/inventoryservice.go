// Code generated by goctl. DO NOT EDIT!
// Source: inventoryService.proto

package inventoryserviceclient

import (
	"context"

	"orderProduct/rpc/inventoryService/inventoryservice"

	"github.com/tal-tech/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	BaseRespond     = inventoryservice.BaseRespond
	ProductResquest = inventoryservice.ProductResquest

	InventoryService interface {
		CheckProductInInventory(ctx context.Context, in *ProductResquest, opts ...grpc.CallOption) (*BaseRespond, error)
		DecreaseInventory(ctx context.Context, in *ProductResquest, opts ...grpc.CallOption) (*BaseRespond, error)
	}

	defaultInventoryService struct {
		cli zrpc.Client
	}
)

func NewInventoryService(cli zrpc.Client) InventoryService {
	return &defaultInventoryService{
		cli: cli,
	}
}

func (m *defaultInventoryService) CheckProductInInventory(ctx context.Context, in *ProductResquest, opts ...grpc.CallOption) (*BaseRespond, error) {
	client := inventoryservice.NewInventoryServiceClient(m.cli.Conn())
	return client.CheckProductInInventory(ctx, in, opts...)
}

func (m *defaultInventoryService) DecreaseInventory(ctx context.Context, in *ProductResquest, opts ...grpc.CallOption) (*BaseRespond, error) {
	client := inventoryservice.NewInventoryServiceClient(m.cli.Conn())
	return client.DecreaseInventory(ctx, in, opts...)
}
