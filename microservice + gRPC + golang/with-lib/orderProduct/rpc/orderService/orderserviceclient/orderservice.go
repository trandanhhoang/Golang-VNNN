// Code generated by goctl. DO NOT EDIT!
// Source: orderService.proto

package orderserviceclient

import (
	"context"

	"orderProduct/rpc/orderService/orderservice"

	"github.com/tal-tech/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	BaseRespond       = orderservice.BaseRespond
	SaveOrderResquest = orderservice.SaveOrderResquest

	OrderService interface {
		SaveOrder(ctx context.Context, in *SaveOrderResquest, opts ...grpc.CallOption) (*BaseRespond, error)
	}

	defaultOrderService struct {
		cli zrpc.Client
	}
)

func NewOrderService(cli zrpc.Client) OrderService {
	return &defaultOrderService{
		cli: cli,
	}
}

func (m *defaultOrderService) SaveOrder(ctx context.Context, in *SaveOrderResquest, opts ...grpc.CallOption) (*BaseRespond, error) {
	client := orderservice.NewOrderServiceClient(m.cli.Conn())
	return client.SaveOrder(ctx, in, opts...)
}
