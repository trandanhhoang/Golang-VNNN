// Code generated by goctl. DO NOT EDIT!
// Source: userService.proto

package userserviceclient

import (
	"context"

	"orderProduct/rpc/userService/userservice"

	"github.com/tal-tech/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	BaseRespond  = userservice.BaseRespond
	TokenRequest = userservice.TokenRequest

	UserService interface {
		VerifyUserByToken(ctx context.Context, in *TokenRequest, opts ...grpc.CallOption) (*BaseRespond, error)
	}

	defaultUserService struct {
		cli zrpc.Client
	}
)

func NewUserService(cli zrpc.Client) UserService {
	return &defaultUserService{
		cli: cli,
	}
}

func (m *defaultUserService) VerifyUserByToken(ctx context.Context, in *TokenRequest, opts ...grpc.CallOption) (*BaseRespond, error) {
	client := userservice.NewUserServiceClient(m.cli.Conn())
	return client.VerifyUserByToken(ctx, in, opts...)
}
