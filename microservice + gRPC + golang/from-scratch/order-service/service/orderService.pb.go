// Code generated by protoc-gen-go. DO NOT EDIT.
// source: orderService.proto

package service

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SaveOrderResquest struct {
	Order                []byte   `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SaveOrderResquest) Reset()         { *m = SaveOrderResquest{} }
func (m *SaveOrderResquest) String() string { return proto.CompactTextString(m) }
func (*SaveOrderResquest) ProtoMessage()    {}
func (*SaveOrderResquest) Descriptor() ([]byte, []int) {
	return fileDescriptor_93d3238042c2687a, []int{0}
}

func (m *SaveOrderResquest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SaveOrderResquest.Unmarshal(m, b)
}
func (m *SaveOrderResquest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SaveOrderResquest.Marshal(b, m, deterministic)
}
func (m *SaveOrderResquest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveOrderResquest.Merge(m, src)
}
func (m *SaveOrderResquest) XXX_Size() int {
	return xxx_messageInfo_SaveOrderResquest.Size(m)
}
func (m *SaveOrderResquest) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveOrderResquest.DiscardUnknown(m)
}

var xxx_messageInfo_SaveOrderResquest proto.InternalMessageInfo

func (m *SaveOrderResquest) GetOrder() []byte {
	if m != nil {
		return m.Order
	}
	return nil
}

type BaseRespond struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BaseRespond) Reset()         { *m = BaseRespond{} }
func (m *BaseRespond) String() string { return proto.CompactTextString(m) }
func (*BaseRespond) ProtoMessage()    {}
func (*BaseRespond) Descriptor() ([]byte, []int) {
	return fileDescriptor_93d3238042c2687a, []int{1}
}

func (m *BaseRespond) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaseRespond.Unmarshal(m, b)
}
func (m *BaseRespond) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaseRespond.Marshal(b, m, deterministic)
}
func (m *BaseRespond) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaseRespond.Merge(m, src)
}
func (m *BaseRespond) XXX_Size() int {
	return xxx_messageInfo_BaseRespond.Size(m)
}
func (m *BaseRespond) XXX_DiscardUnknown() {
	xxx_messageInfo_BaseRespond.DiscardUnknown(m)
}

var xxx_messageInfo_BaseRespond proto.InternalMessageInfo

func (m *BaseRespond) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type ProductResquest struct {
	Products             []byte   `protobuf:"bytes,1,opt,name=products,proto3" json:"products,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProductResquest) Reset()         { *m = ProductResquest{} }
func (m *ProductResquest) String() string { return proto.CompactTextString(m) }
func (*ProductResquest) ProtoMessage()    {}
func (*ProductResquest) Descriptor() ([]byte, []int) {
	return fileDescriptor_93d3238042c2687a, []int{2}
}

func (m *ProductResquest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProductResquest.Unmarshal(m, b)
}
func (m *ProductResquest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProductResquest.Marshal(b, m, deterministic)
}
func (m *ProductResquest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProductResquest.Merge(m, src)
}
func (m *ProductResquest) XXX_Size() int {
	return xxx_messageInfo_ProductResquest.Size(m)
}
func (m *ProductResquest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProductResquest.DiscardUnknown(m)
}

var xxx_messageInfo_ProductResquest proto.InternalMessageInfo

func (m *ProductResquest) GetProducts() []byte {
	if m != nil {
		return m.Products
	}
	return nil
}

func init() {
	proto.RegisterType((*SaveOrderResquest)(nil), "service.SaveOrderResquest")
	proto.RegisterType((*BaseRespond)(nil), "service.BaseRespond")
	proto.RegisterType((*ProductResquest)(nil), "service.ProductResquest")
}

func init() { proto.RegisterFile("orderService.proto", fileDescriptor_93d3238042c2687a) }

var fileDescriptor_93d3238042c2687a = []byte{
	// 209 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0x3d, 0x8f, 0x82, 0x40,
	0x10, 0x40, 0x8f, 0xe2, 0x0e, 0x6e, 0x8e, 0xe4, 0x64, 0x43, 0x41, 0xa8, 0xcc, 0x36, 0x6a, 0x21,
	0x05, 0xfe, 0x00, 0x13, 0xa3, 0x85, 0x15, 0x66, 0xa9, 0x2c, 0x71, 0x99, 0xc2, 0x86, 0xc5, 0x9d,
	0x85, 0xc4, 0x7f, 0x6f, 0xe4, 0x63, 0x43, 0x34, 0x96, 0x6f, 0x67, 0xf6, 0xe5, 0x65, 0x80, 0x29,
	0x5d, 0xa2, 0xce, 0x51, 0xb7, 0x57, 0x89, 0x49, 0xad, 0x95, 0x51, 0xcc, 0xa5, 0x1e, 0xf9, 0x0a,
	0x82, 0xbc, 0x68, 0x31, 0x7b, 0xae, 0x08, 0xa4, 0x5b, 0x83, 0x64, 0x58, 0x08, 0xdf, 0xdd, 0x9f,
	0xc8, 0x99, 0x3b, 0x4b, 0x5f, 0xf4, 0xc0, 0x17, 0xf0, 0xb7, 0x2b, 0x08, 0x05, 0x52, 0xad, 0xaa,
	0x92, 0x45, 0xe0, 0x52, 0x23, 0x25, 0x12, 0x75, 0x6b, 0x9e, 0x18, 0x91, 0xaf, 0xe1, 0xff, 0xa4,
	0x55, 0xd9, 0x48, 0x63, 0x8d, 0x31, 0x78, 0x75, 0xff, 0x44, 0x83, 0xd4, 0x72, 0x9a, 0x81, 0x9f,
	0x4d, 0x0a, 0xd9, 0x16, 0x7e, 0x6d, 0x12, 0x8b, 0x93, 0xa1, 0x34, 0x79, 0xcb, 0x8c, 0x43, 0x3b,
	0x9b, 0x74, 0xf1, 0xaf, 0xf4, 0x0c, 0xb3, 0x63, 0xd5, 0x62, 0x65, 0x94, 0xbe, 0x8f, 0xd2, 0x03,
	0x04, 0x7b, 0x94, 0x1a, 0x0b, 0x42, 0x3b, 0x63, 0x91, 0x15, 0xbc, 0xf4, 0x7e, 0x52, 0x5f, 0x7e,
	0xba, 0xf3, 0x6d, 0x1e, 0x01, 0x00, 0x00, 0xff, 0xff, 0x53, 0xea, 0xce, 0x62, 0x54, 0x01, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OrderServiceClient is the client API for OrderService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrderServiceClient interface {
	SaveOrder(ctx context.Context, in *SaveOrderResquest, opts ...grpc.CallOption) (*BaseRespond, error)
}

type orderServiceClient struct {
	cc *grpc.ClientConn
}

func NewOrderServiceClient(cc *grpc.ClientConn) OrderServiceClient {
	return &orderServiceClient{cc}
}

func (c *orderServiceClient) SaveOrder(ctx context.Context, in *SaveOrderResquest, opts ...grpc.CallOption) (*BaseRespond, error) {
	out := new(BaseRespond)
	err := c.cc.Invoke(ctx, "/service.OrderService/SaveOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrderServiceServer is the server API for OrderService service.
type OrderServiceServer interface {
	SaveOrder(context.Context, *SaveOrderResquest) (*BaseRespond, error)
}

// UnimplementedOrderServiceServer can be embedded to have forward compatible implementations.
type UnimplementedOrderServiceServer struct {
}

func (*UnimplementedOrderServiceServer) SaveOrder(ctx context.Context, req *SaveOrderResquest) (*BaseRespond, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveOrder not implemented")
}

func RegisterOrderServiceServer(s *grpc.Server, srv OrderServiceServer) {
	s.RegisterService(&_OrderService_serviceDesc, srv)
}

func _OrderService_SaveOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveOrderResquest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).SaveOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.OrderService/SaveOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).SaveOrder(ctx, req.(*SaveOrderResquest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OrderService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.OrderService",
	HandlerType: (*OrderServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SaveOrder",
			Handler:    _OrderService_SaveOrder_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "orderService.proto",
}

// InventoryServiceClient is the client API for InventoryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InventoryServiceClient interface {
	DecreaseInventory(ctx context.Context, in *ProductResquest, opts ...grpc.CallOption) (*BaseRespond, error)
}

type inventoryServiceClient struct {
	cc *grpc.ClientConn
}

func NewInventoryServiceClient(cc *grpc.ClientConn) InventoryServiceClient {
	return &inventoryServiceClient{cc}
}

func (c *inventoryServiceClient) DecreaseInventory(ctx context.Context, in *ProductResquest, opts ...grpc.CallOption) (*BaseRespond, error) {
	out := new(BaseRespond)
	err := c.cc.Invoke(ctx, "/service.InventoryService/DecreaseInventory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InventoryServiceServer is the server API for InventoryService service.
type InventoryServiceServer interface {
	DecreaseInventory(context.Context, *ProductResquest) (*BaseRespond, error)
}

// UnimplementedInventoryServiceServer can be embedded to have forward compatible implementations.
type UnimplementedInventoryServiceServer struct {
}

func (*UnimplementedInventoryServiceServer) DecreaseInventory(ctx context.Context, req *ProductResquest) (*BaseRespond, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DecreaseInventory not implemented")
}

func RegisterInventoryServiceServer(s *grpc.Server, srv InventoryServiceServer) {
	s.RegisterService(&_InventoryService_serviceDesc, srv)
}

func _InventoryService_DecreaseInventory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductResquest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InventoryServiceServer).DecreaseInventory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.InventoryService/DecreaseInventory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InventoryServiceServer).DecreaseInventory(ctx, req.(*ProductResquest))
	}
	return interceptor(ctx, in, info, handler)
}

var _InventoryService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.InventoryService",
	HandlerType: (*InventoryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DecreaseInventory",
			Handler:    _InventoryService_DecreaseInventory_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "orderService.proto",
}
